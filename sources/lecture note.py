# 2주차

# 강의노트 1 - 강의 개요
# 추상화란? 구조는 모르지만 사용은 할 수 있게 하는 것
# 우리가 냉장고의 구조는 몰라도 사용은 할 수 있다
# "컴퓨터처럼 생각하지 말자" 사람처럼 생각하자.

# 알고리즘: 30년 전까지는 공식이 모든 문제의 solution 이었음
# 최근에는 알고리즘이 중요한 solution이다.
# 알고리즘을 통해 근사값을 얻어내는 것 (값이 일정하진 않다)

# 프로그램은 명령어의 집합
# 명령어가 모여서 기능이 된다.
# abstraction level이 높다 = 사용자가 사용하기 편하다
# ex) c++에 비해 python이 더 abstraction level이 높다.

# 프로그래밍은 창의적인 작업물. 세상에 완전히 같은 코드는 없다.

# 카이스트의 cs101이라는 강의를 레퍼런스로 하고 있다

# 중간, 기말 30%, 출석 10%, 자잘한 과제 30%
# 생각해야 하는 과제: 컴퓨터를 전공하면서 어떤 진로를 가지고 싶은지
# 애니메이션 과제: 중간고사 이후 애니메이션 프로그래밍을 배울 예정
# 100% 내가 창작으로 생각해서 만드는 과제. 원하는 영상을 만들어오기
# 추가 점수: 참여 점수... 발표 의견제시 열심히 하세용



# 강의노트 1 - CSE
# 컴퓨터 과학과 공학의 차이
# 컴퓨터 공학 CE: 하드웨어 중점: 컴퓨터 구조론, 회로, 제어
# 혹은 ECE Electronical Computer Engineering
# 컴퓨터 과학 CS: 소프트웨어 중점: 프로그래밍, 알고리즘, 인공지능

# 우리 학교는 여러 프로그래밍 언어를 굉장히 자세하게 알려주는
# 몇 없는 학교이고 과이다.

# 이산수학...? 오픈소스, OS, 컴구조론, TCP 통신
# 소프트웨어 공학: 소프트웨어 표준에 대해 배우는 강의
# 정보검색론은? 송종수 교수님.
# Graphics... 배우고 싶은데 강평이 끔찍하던데;;
# 자료구조 -> 알고리즘
# ICPC 같은 국제 알고리즘 대회 같은 것도 있다.

# A.I. > Machine Learning > Deep Learning
# A.I.가 가장 큰 범주

# 컴퓨터 학과는 공학과 거리가 멀다. 우리는 공대생이 아니다.
# 우리는 타 공대에 비해 위험한 일이 없다...
# 창의적인 활동을 하는 게 전부
# 빈 화면에 코드를 채우는 예술가? 정도로 생각하자





# 강의노트 2 - 자료구조 & 알고리즘
# 1학년까진 적당히 해도 되지만, 자료구조를 모르면 아무 것도 못 한다

# 강의노트 2 - 파이썬 개요
#